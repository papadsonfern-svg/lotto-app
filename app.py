import streamlit as st
import pandas as pd

st.set_page_config(page_title="‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡πÄ‡∏à‡πâ‡∏≤‡∏°‡∏∑‡∏≠‡∏´‡∏ß‡∏¢", layout="wide")

st.markdown("<h1 style='text-align: center;'>üí∏ ‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡πÄ‡∏à‡πâ‡∏≤‡∏°‡∏∑‡∏≠‡∏´‡∏ß‡∏¢‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå</h1>", unsafe_allow_html=True)

# -------------------------
# ‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
# -------------------------
if "bets" not in st.session_state:
    st.session_state.bets = []

if "blocked_numbers" not in st.session_state:
    st.session_state.blocked_numbers = {}

if "normal_limit" not in st.session_state:
    st.session_state.normal_limit = 10000  # ‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô

# -------------------------
# Sidebar: ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤
# -------------------------
with st.sidebar:
    st.header("‚öôÔ∏è ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤")

    # ‚úÖ limit ‡∏Ç‡∏≠‡∏á‡πÄ‡∏•‡∏Ç‡∏õ‡∏Å‡∏ï‡∏¥
    st.session_state.normal_limit = st.number_input("‡∏¢‡∏≠‡∏î‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î‡∏Ç‡∏≠‡∏á‡πÄ‡∏•‡∏Ç‡∏õ‡∏Å‡∏ï‡∏¥", min_value=0, step=100, value=st.session_state.normal_limit)

    st.subheader("‡πÄ‡∏•‡∏Ç‡∏≠‡∏±‡πâ‡∏ô")
    blocked_num = st.text_input("‡πÄ‡∏•‡∏Ç‡∏≠‡∏±‡πâ‡∏ô (‡πÄ‡∏ä‡πà‡∏ô 19 ‡∏´‡∏£‡∏∑‡∏≠ 123)")
    blocked_limit = st.number_input("‡∏¢‡∏≠‡∏î‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î‡∏Ç‡∏≠‡∏á‡πÄ‡∏•‡∏Ç‡∏≠‡∏±‡πâ‡∏ô", min_value=0, step=10)

    if st.button("‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏•‡∏Ç‡∏≠‡∏±‡πâ‡∏ô"):
        if blocked_num:
            st.session_state.blocked_numbers[blocked_num] = blocked_limit
            st.success(f"‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏•‡∏Ç‡∏≠‡∏±‡πâ‡∏ô {blocked_num} (‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô {blocked_limit} ‡∏ö‡∏≤‡∏ó)")

    if st.session_state.blocked_numbers:
        st.subheader("üìå ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏Ç‡∏≠‡∏±‡πâ‡∏ô")
        blocked_data = []
        for num, limit in st.session_state.blocked_numbers.items():
            already = sum(b["‡∏¢‡∏≠‡∏î‡∏ã‡∏∑‡πâ‡∏≠"] for b in st.session_state.bets if b["‡πÄ‡∏•‡∏Ç"] == num)
            remaining = max(limit - already, 0)
            blocked_data.append({
                "‡πÄ‡∏•‡∏Ç": num,
                "‡∏£‡∏±‡∏ö‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î": limit,
                "‡∏ã‡∏∑‡πâ‡∏≠‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß": already,
                "‡∏£‡∏±‡∏ö‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏î‡πâ": remaining
            })
        df_blocked = pd.DataFrame(blocked_data)

        def highlight(val, col_name):
            if col_name == "‡πÄ‡∏•‡∏Ç":
                return "color: red; font-weight: bold;"
            elif col_name == "‡∏£‡∏±‡∏ö‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏î‡πâ" and val <= 0:
                return "background-color: red; color: white; font-weight: bold;"
            return ""

        st.dataframe(
            df_blocked.style.apply(
                lambda row: [highlight(v, c) for v, c in zip(row, df_blocked.columns)],
                axis=1
            ),
            use_container_width=True
        )

# -------------------------
# Layout 3 ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå
# -------------------------
col1, col2, col3 = st.columns([1.5, 2, 2])

# -------------------------
# col1: ‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÇ‡∏û‡∏¢
# -------------------------
with col1:
    st.markdown("### üìù ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÇ‡∏û‡∏¢‡πÉ‡∏´‡∏°‡πà")
    with st.form("add_bet"):
        number = st.text_input("‡πÄ‡∏•‡∏Ç (2 ‡∏´‡∏£‡∏∑‡∏≠ 3 ‡∏´‡∏•‡∏±‡∏Å)").strip()
        bet_type = st.selectbox("‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó", ["2‡∏ï‡∏±‡∏ß‡∏ö‡∏ô", "2‡∏ï‡∏±‡∏ß‡∏•‡πà‡∏≤‡∏á", "3‡∏ï‡∏±‡∏ß‡πÄ‡∏ï‡πá‡∏á", "3‡∏ï‡∏±‡∏ß‡πÇ‡∏ï‡πä‡∏î"])
        amount = st.number_input("‡∏¢‡∏≠‡∏î‡∏ã‡∏∑‡πâ‡∏≠", min_value=1, step=1)
        submitted = st.form_submit_button("‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÇ‡∏û‡∏¢")

        if submitted:
            if not number.isdigit():
                st.error("‚ùå ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô")
            else:
                # ‚úÖ ‡πÄ‡∏ä‡πá‡∏Ñ limit (‡πÄ‡∏•‡∏Ç‡∏≠‡∏±‡πâ‡∏ô vs ‡πÄ‡∏•‡∏Ç‡∏õ‡∏Å‡∏ï‡∏¥)
                if number in st.session_state.blocked_numbers:
                    max_limit = st.session_state.blocked_numbers[number]
                else:
                    max_limit = st.session_state.normal_limit

                already = sum(b["‡∏¢‡∏≠‡∏î‡∏ã‡∏∑‡πâ‡∏≠"] for b in st.session_state.bets if b["‡πÄ‡∏•‡∏Ç"] == number)
                if already + amount > max_limit:
                    st.error(f"‚ùå ‡πÄ‡∏•‡∏Ç {number} ‡πÄ‡∏Å‡∏¥‡∏ô‡∏¢‡∏≠‡∏î‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö‡πÑ‡∏î‡πâ (‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î {max_limit} ‡∏ö‡∏≤‡∏ó)")
                else:
                    st.session_state.bets.append({"‡πÄ‡∏•‡∏Ç": number, "‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó": bet_type, "‡∏¢‡∏≠‡∏î‡∏ã‡∏∑‡πâ‡∏≠": amount})
                    st.success(f"‚úÖ ‡∏£‡∏±‡∏ö‡πÇ‡∏û‡∏¢ {number} ({bet_type}) {amount} ‡∏ö‡∏≤‡∏ó")

# -------------------------
# col2: ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÇ‡∏û‡∏¢‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
# -------------------------
with col2:
    st.markdown("### üìä ‡πÇ‡∏û‡∏¢‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î")
    if st.session_state.bets:
        df = pd.DataFrame(st.session_state.bets)

        # ‚úÖ ‡πÉ‡∏™‡πà‡∏™‡∏µ‡πÅ‡∏î‡∏á
        def style_bets(row):
            num = row["‡πÄ‡∏•‡∏Ç"]
            amt = row["‡∏¢‡∏≠‡∏î‡∏ã‡∏∑‡πâ‡∏≠"]
            styles = [""] * len(row)

            if num in st.session_state.blocked_numbers:
                max_limit = st.session_state.blocked_numbers[num]
            else:
                max_limit = st.session_state.normal_limit

            already = sum(b["‡∏¢‡∏≠‡∏î‡∏ã‡∏∑‡πâ‡∏≠"] for b in st.session_state.bets if b["‡πÄ‡∏•‡∏Ç"] == num)
            if already > max_limit:
                styles = ["background-color: red; color: white; font-weight: bold;"] * len(row)
            elif num in st.session_state.blocked_numbers:
                for i, col in enumerate(df.columns):
                    if col == "‡πÄ‡∏•‡∏Ç":
                        styles[i] = "color: red; font-weight: bold;"

            return styles

        st.dataframe(
            df.style.apply(style_bets, axis=1),
            use_container_width=True
        )

        # ‡∏£‡∏ß‡∏°‡πÄ‡∏•‡∏Ç‡∏ã‡πâ‡∏≥
        st.markdown("### üîÑ ‡∏£‡∏ß‡∏°‡πÄ‡∏•‡∏Ç‡∏ã‡πâ‡∏≥‡πÅ‡∏¢‡∏Å‡∏ï‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó")
        for cat in ["2‡∏ï‡∏±‡∏ß‡∏ö‡∏ô", "2‡∏ï‡∏±‡∏ß‡∏•‡πà‡∏≤‡∏á", "3‡∏ï‡∏±‡∏ß‡πÄ‡∏ï‡πá‡∏á", "3‡∏ï‡∏±‡∏ß‡πÇ‡∏ï‡πä‡∏î"]:
            cat_df = df[df["‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó"] == cat].groupby("‡πÄ‡∏•‡∏Ç", as_index=False).sum()
            if not cat_df.empty:
                st.write(f"üëâ {cat}")
                st.dataframe(cat_df)

# -------------------------
# col3: ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏£‡∏ß‡∏°
# -------------------------
with col3:
    if st.session_state.bets:
        df = pd.DataFrame(st.session_state.bets)

        st.markdown("### üí∞ ‡∏™‡∏£‡∏∏‡∏õ‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏ï‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó")
        summary = df.groupby("‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó")["‡∏¢‡∏≠‡∏î‡∏ã‡∏∑‡πâ‡∏≠"].sum()
        st.write(summary)

        st.markdown("### üíµ ‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î")
        st.success(f"{df['‡∏¢‡∏≠‡∏î‡∏ã‡∏∑‡πâ‡∏≠'].sum():,.0f} ‡∏ö‡∏≤‡∏ó")

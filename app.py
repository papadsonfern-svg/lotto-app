import streamlit as st
import pandas as pd
from datetime import datetime

st.set_page_config("‡πÄ‡∏à‡πâ‡∏≤‡∏°‡∏∑‡∏≠‡∏´‡∏ß‡∏¢‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå", layout="wide")

if "orders" not in st.session_state:
    st.session_state.orders = pd.DataFrame(columns=["‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó","‡πÄ‡∏•‡∏Ç","‡∏¢‡∏≠‡∏î‡∏ã‡∏∑‡πâ‡∏≠","‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞","‡πÄ‡∏ß‡∏•‡∏≤"])

# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤
st.sidebar.header("‚öôÔ∏è ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤")
percent = st.sidebar.number_input("‡πÄ‡∏õ‡∏≠‡∏£‡πå‡πÄ‡∏ã‡πá‡∏ô‡∏ï‡πå‡∏´‡∏±‡∏Å (%)", 0, 100, 20)
block2 = st.sidebar.text_input("‡πÄ‡∏•‡∏Ç‡∏≠‡∏±‡πâ‡∏ô 2 ‡∏ï‡∏±‡∏ß (‡πÄ‡∏ä‡πà‡∏ô 19,29,99)")
block3 = st.sidebar.text_input("‡πÄ‡∏•‡∏Ç‡∏≠‡∏±‡πâ‡∏ô 3 ‡∏ï‡∏±‡∏ß (‡πÄ‡∏ä‡πà‡∏ô 123,456,999)")

block2_set = {x.strip().zfill(2) for x in block2.split(",") if x.strip()}
block3_set = {x.strip().zfill(3) for x in block3.split(",") if x.strip()}

# ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÇ‡∏û‡∏¢
st.header("üìù ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÇ‡∏û‡∏¢")
col1, col2, col3, col4 = st.columns([2,1,1,1])
with col1:
    lotto_type = st.selectbox("‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó", ["2 ‡∏ï‡∏±‡∏ß‡∏ö‡∏ô","2 ‡∏ï‡∏±‡∏ß‡∏•‡πà‡∏≤‡∏á","3 ‡∏ï‡∏±‡∏ß‡πÄ‡∏ï‡πá‡∏á","3 ‡∏ï‡∏±‡∏ß‡πÇ‡∏ï‡πä‡∏î"])
with col2:
    num = st.text_input("‡πÄ‡∏•‡∏Ç")
with col3:
    amount = st.number_input("‡∏¢‡∏≠‡∏î‡∏ã‡∏∑‡πâ‡∏≠", min_value=0, value=0)
with col4:
    if st.button("‚ûï ‡πÄ‡∏û‡∏¥‡πà‡∏°"):
        if lotto_type.startswith("2"):
            num = num.zfill(2)
            status = "‡∏≠‡∏±‡πâ‡∏ô" if num in block2_set else "‡∏õ‡∏Å‡∏ï‡∏¥"
        else:
            num = num.zfill(3)
            status = "‡∏≠‡∏±‡πâ‡∏ô" if num in block3_set else "‡∏õ‡∏Å‡∏ï‡∏¥"
        new = {"‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó": lotto_type, "‡πÄ‡∏•‡∏Ç": num, "‡∏¢‡∏≠‡∏î‡∏ã‡∏∑‡πâ‡∏≠": amount, "‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞": status, "‡πÄ‡∏ß‡∏•‡∏≤": datetime.now()}
        st.session_state.orders = pd.concat([st.session_state.orders, pd.DataFrame([new])], ignore_index=True)

# ‡πÅ‡∏™‡∏î‡∏á‡πÇ‡∏û‡∏¢
st.subheader("üìã ‡πÇ‡∏û‡∏¢‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î")
if st.session_state.orders.empty:
    st.info("‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÇ‡∏û‡∏¢")
else:
    df = st.session_state.orders.groupby(["‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó","‡πÄ‡∏•‡∏Ç","‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞"], as_index=False).sum()
    df["‡∏´‡∏•‡∏±‡∏á‡∏´‡∏±‡∏Å%"] = df["‡∏¢‡∏≠‡∏î‡∏ã‡∏∑‡πâ‡∏≠"] * (100 - percent) / 100
    st.dataframe(df, use_container_width=True)

    total = df["‡∏¢‡∏≠‡∏î‡∏ã‡∏∑‡πâ‡∏≠"].sum()
    total_net = df["‡∏´‡∏•‡∏±‡∏á‡∏´‡∏±‡∏Å%"].sum()
    st.metric("‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î", f"{total:,.0f} ‡∏ö‡∏≤‡∏ó")
    st.metric(f"‡∏´‡∏•‡∏±‡∏á‡∏´‡∏±‡∏Å {percent}%", f"{total_net:,.0f} ‡∏ö‡∏≤‡∏ó")
    st.download_button("üì• ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î CSV", df.to_csv(index=False).encode("utf-8-sig"),
                       "lotto_summary.csv", "text/csv")
